# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ClientEntity {
  """Id Client"""
  id: Int!
  email: String!
  name: String!
  phone: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type BrandEntity {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CategoryEntity {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UomEntity {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TaxEntity {
  id: Int!
  amount: Int!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DiscountEntity {
  id: Int!
  discountType: PriceRole!
  amount: Int!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum PriceRole {
  FIXED
  PERCENT
}

type VariantEntity {
  id: Int!
  productId: Int!
  product: ProductEntity
  name: String!
  price: Int!
  capital: Int!
  code: String!
  isStock: Boolean!
  stock: Int!
  minimalStock: Int!
  uom: String!
}

type ProductEntity {
  id: Int!
  variant: VariantEntity
  productNumber: String!
  name: String!
  category: String!
  brand: String!
  photo: String!
  favourite: Boolean!
  price: Int!
  capital: Int!
  code: String!
  isStock: Boolean!
  minimalStock: Int!
  uom: String!
  createdAt: DateTime!
  updateddAt: DateTime!
}

type OrderProductEntity {
  id: Int!
  productId: Int!
  orderId: Int!
  orderNumber: String!
  productName: String!
  variantName: String!
  amount: Int!
  uom: String!
  price: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderEntity {
  id: Int!
  clientId: Int!
  client: ClientEntity
  orderNumber: String!
  totalItem: Int!
  totalPayment: Int!
  orderProduct: [OrderProductEntity!]
  createdAt: DateTime!
  updateddAt: DateTime!
}

type UserEntity {
  """Id Client"""
  id: Int!
  email: String!
  name: String!
  password: String!
  role: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  clients: [ClientEntity!]!
  client(id: Int!): ClientEntity!
  brands: [BrandEntity!]!
  brand(id: Int!): BrandEntity!
  categories: [CategoryEntity!]!
  category(id: Int!): CategoryEntity!
  uoms: [UomEntity!]!
  uom(id: Int!): UomEntity!
  taxes: [TaxEntity!]!
  tax(id: Int!): TaxEntity!
  discounts: [DiscountEntity!]!
  discount(id: Int!): DiscountEntity!
  products: [ProductEntity!]!
  product(id: Int!): ProductEntity!
  variants: [VariantEntity!]
  variant(id: Int!): VariantEntity
  orders: [OrderEntity!]!
  order(id: Int!): OrderEntity!
  orderProduct(id: Int!): OrderProductEntity!
  users: [UserEntity!]!
  user(id: Int!): UserEntity!
}

type Mutation {
  createClient(createClientInput: CreateClientInput!): ClientEntity!
  updateClient(updateClientInput: UpdateClientInput!): ClientEntity!
  deleteClient(id: DeleteClientInput!): ClientEntity!
  createBrand(createBrandInput: CreateBrandInput!): BrandEntity!
  updateBrand(updateBrandInput: UpdateBrandInput!): BrandEntity!
  deleteBrand(id: DeleteBrandInput!): BrandEntity!
  createCategory(createCategoryInput: CreateCategoryInput!): CategoryEntity!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): CategoryEntity!
  deleteCategory(id: DeleteCategoryInput!): CategoryEntity!
  createUom(createUomInput: CreateUomInput!): UomEntity!
  updateUom(updateUomInput: UpdateUomInput!): UomEntity!
  deleteUom(id: DeleteUomInput!): UomEntity!
  createTax(createTaxInput: CreateTaxInput!): TaxEntity!
  updateTax(updateTaxInput: UpdateTaxInput!): TaxEntity!
  deleteTax(id: DeleteTaxInput!): TaxEntity!
  createDiscount(createDiscountInput: CreateDiscountInput!): DiscountEntity!
  updateDiscount(updateDiscountInput: UpdateDiscountInput!): DiscountEntity!
  deleteDiscount(id: DeleteDiscountInput!): DiscountEntity!
  createProduct(createProductInput: CreateProductInput!): ProductEntity!
  updateProduct(updateProductInput: UpdateProductInput!): ProductEntity!
  deleteProduct(id: DeleteProductInput!): ProductEntity!
  createVariant(createVariantInput: CreateVariantInput!): VariantEntity!
  updateVariant(updateVariantInput: UpdateVariantInput!): VariantEntity!
  deleteVariant(id: Int!): VariantEntity!
  createOrder(createOrderInput: CreateOrderInput!): OrderEntity!
  updateOrder(updateOrderInput: UpdateOrderInput!): OrderEntity!
  removeOrder(id: DeleteOrderInput!): OrderEntity!
  createOrderProduct(createOrderProductInput: CreateOrderProductInput!): OrderProductEntity!
  updateOrderProduct(updateOrderProductInput: UpdateOrderProductInput!): OrderProductEntity!
  removeOrderProduct(id: Int!): OrderProductEntity!
  createUser(createUserInput: CreateUserInput!): UserEntity!
  updateUser(updateUserInput: UpdateUserInput!): UserEntity!
  deleteUser(id: DeleteUserInput!): UserEntity!
}

input CreateClientInput {
  """"""
  email: String!

  """"""
  name: String!

  """"""
  phone: String!
}

input UpdateClientInput {
  """"""
  email: String!

  """"""
  name: String!

  """"""
  phone: String!
  id: Int!
}

input DeleteClientInput {
  id: Int!
}

input CreateBrandInput {
  name: String!
}

input UpdateBrandInput {
  name: String!
  id: Int!
}

input DeleteBrandInput {
  id: Int!
}

input CreateCategoryInput {
  name: String!
}

input UpdateCategoryInput {
  name: String!
  id: Int!
}

input DeleteCategoryInput {
  id: Int!
}

input CreateUomInput {
  name: String!
}

input UpdateUomInput {
  name: String
  id: Int!
}

input DeleteUomInput {
  id: Int!
}

input CreateTaxInput {
  amount: Int!
  description: String!
}

input UpdateTaxInput {
  amount: Int!
  description: String!
  id: Int!
}

input DeleteTaxInput {
  id: Int!
}

input CreateDiscountInput {
  discountType: String!
  amount: Int!
  description: String!
}

input UpdateDiscountInput {
  discountType: String!
  amount: Int!
  description: String!
  id: Int!
}

input DeleteDiscountInput {
  id: Int!
}

input CreateProductInput {
  name: String!
  category: String!
  brand: String!
  photo: String!
  favourite: Boolean!
  price: Int!
  stock: Int!
  capital: Int!
  code: String!
  isStock: Boolean!
  minimalStock: Int!
  uom: String!
}

input UpdateProductInput {
  name: String!
  category: String!
  brand: String!
  photo: String!
  favourite: Boolean!
  price: Int!
  stock: Int!
  capital: Int!
  code: String!
  isStock: Boolean!
  minimalStock: Int!
  uom: String!
  id: Int!
  productNumber: String!
}

input DeleteProductInput {
  id: Int!
}

input CreateVariantInput {
  name: String!
  productId: Int!
  price: Int!
  capital: Int!
  code: String!
  isStock: Boolean!
  stock: Int!
  minimalStock: Int!
  uom: String!
}

input UpdateVariantInput {
  name: String!
  productId: Int!
  price: Int!
  capital: Int!
  code: String!
  isStock: Boolean!
  stock: Int!
  minimalStock: Int!
  uom: String!
  id: Int!
}

input CreateOrderInput {
  clientId: Int!
  orderNumber: String!
  totalItem: Int!
  totalPayment: Int!
  orderProduct: [CreateOrderProductInput!]
}

input CreateOrderProductInput {
  productId: Int!
  orderId: Int!
  orderNumber: String!
  productName: String!
  variantName: String!
  amount: Int!
  uom: String!
  price: Int!
}

input UpdateOrderInput {
  clientId: Int!
  orderNumber: String!
  totalItem: Int!
  totalPayment: Int!
  orderProduct: [UpdateOrderProductInput!]
  id: Int!
}

input UpdateOrderProductInput {
  productId: Int!
  orderId: Int!
  orderNumber: String!
  productName: String!
  variantName: String!
  amount: Int!
  uom: String!
  price: Int!
  id: Int!
}

input DeleteOrderInput {
  id: Int!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  role: String!
}

input UpdateUserInput {
  email: String!
  name: String!
  password: String
  role: String!
  id: Int!
}

input DeleteUserInput {
  id: Int!
}