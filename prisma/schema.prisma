generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String?
  role      UserRole  @default(CASHIER)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  deleted   Boolean   @default(false)
}

enum UserRole {
  ADMIN
  CASHIER
  WAITRESS
  WAREHOUSE
}

model Customer {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  phone     String?
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  deleted   Boolean   @default(false)
}

// ORDER
model Order {
  id           Int            @id @default(autoincrement())
  customerId   Int?
  customer     Customer?      @relation(fields: [customerId], references: [id])
  tableId      Int
  table        Table          @relation(fields: [tableId], references: [id])
  orderNumber  String         @unique
  totalItem    Int
  totalPayment Int
  orderProduct OrderProduct[]
  paymentAt    DateTime?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @default(now()) @updatedAt
  deleted      Boolean        @default(false)
}

model OrderProduct {
  id          Int       @id @default(autoincrement())
  orderId     Int?
  order       Order?    @relation(fields: [orderId], references: [id])
  product     Product[]
  orderNumber String
  productName String
  variantName String
  amount      Int
  uom         String
  price       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt
  deleted     Boolean   @default(false)
}

// PRODUCT
model Product {
  id             Int           @id @default(autoincrement())
  code           String        @unique
  orderProductId Int?          @unique
  orderProduct   OrderProduct? @relation(fields: [orderProductId], references: [id])
  variant        Variant[]
  material       Material[]
  name           String
  category       String
  description    String
  photo          String
  isFavourite    Boolean       @default(false)
  price          Int           @default(0)
  isStock        Boolean       @default(false)
  uom            String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @default(now()) @updatedAt
  deleted        Boolean       @default(false)
}

model Variant {
  id          Int       @id @default(autoincrement())
  productId   Int?
  product     Product?  @relation(fields: [productId], references: [id])
  variantCode String    @unique
  name        String
  price       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt
  deleted     Boolean   @default(false)
}

model Material {
  id                Int                @id @default(autoincrement())
  productId         Int?
  product           Product?           @relation(fields: [productId], references: [id])
  materialInventory InventoryMaterial?
  materialNumber    String?            @unique
  name              String
  stock             Int?               @default(0)
  minimalStock      Int
  code              String // SKU
  type              MaterialType       @default(RAW)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime?          @default(now()) @updatedAt
  deleted           Boolean            @default(false)
}

enum MaterialType {
  RAW
  SUPPORT
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  deleted   Boolean   @default(false)
}

model Tax {
  id          Int       @id @default(autoincrement())
  amount      Int
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt
  deleted     Boolean   @default(false)
}

model Promo {
  id           Int       @id @default(autoincrement())
  discountType PriceRole @default(FIXED)
  amount       Int       @default(0)
  description  String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @default(now()) @updatedAt
  deleted      Boolean   @default(false)
}

enum PriceRole {
  FIXED
  PERCENT
}

// TABLE
model Table {
  id               Int                @id @default(autoincrement())
  name             String
  status           StatusTable        @default(CLOSED)
  orders           Order[]
  tableReserVation TableReserVation[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime?          @default(now()) @updatedAt
  deleted          Boolean            @default(false)
}

enum StatusTable {
  OPEN
  ORDERED
  RESERVED
  CLOSED
}

model TableReserVation {
  id                Int               @id @default(autoincrement())
  reservationNumber String            @unique
  tableId           Int?
  table             Table?            @relation(fields: [tableId], references: [id])
  status            ReservationStatus @default(RESERVED)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime?         @default(now()) @updatedAt
  deleted           Boolean           @default(false)
}

enum ReservationStatus {
  RESERVED
  REJECT
}

// INVENTORY
model Supplier {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String    @default("")
  email     String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt
  deleted   Boolean   @default(false)
}

model Inventory {
  id                Int                 @id @default(autoincrement())
  inventoryMaterial InventoryMaterial[]
  invoiceNumber     String              @unique
  tanggalMasuk      DateTime
  createdAt         DateTime            @default(now())
  updatedAt         DateTime?           @default(now()) @updatedAt
  deleted           Boolean             @default(false)
}

model InventoryMaterial {
  id           Int        @id @default(autoincrement())
  inventoryId  Int?
  inventory    Inventory? @relation(fields: [inventoryId], references: [id])
  materialId   Int        @unique
  material     Material   @relation(fields: [materialId], references: [id])
  capital      Int        @default(0)
  stock        Int        @default(0)
  totalCapital Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?  @default(now()) @updatedAt
  deleted      Boolean    @default(false)
}

// PRINTER
model Printer {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  ipAddress   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @default(now()) @updatedAt
  deleted     Boolean   @default(false)
}
